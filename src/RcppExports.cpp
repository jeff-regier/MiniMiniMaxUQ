// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// lp_distance
double lp_distance(NumericVector a, NumericVector b, double p);
RcppExport SEXP MiniMiniMaxUQ_lp_distance(SEXP aSEXP, SEXP bSEXP, SEXP pSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP );
        Rcpp::traits::input_parameter< double >::type p(pSEXP );
        double __result = lp_distance(a, b, p);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// find_K_hat
double find_K_hat(NumericMatrix xs, NumericVector ys, double p_norm = -1., double min_dist = 1e-4);
RcppExport SEXP MiniMiniMaxUQ_find_K_hat(SEXP xsSEXP, SEXP ysSEXP, SEXP p_normSEXP, SEXP min_distSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type ys(ysSEXP );
        Rcpp::traits::input_parameter< double >::type p_norm(p_normSEXP );
        Rcpp::traits::input_parameter< double >::type min_dist(min_distSEXP );
        double __result = find_K_hat(xs, ys, p_norm, min_dist);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// f_deviations
NumericVector f_deviations(NumericMatrix xs, double K_hat, NumericVector x);
RcppExport SEXP MiniMiniMaxUQ_f_deviations(SEXP xsSEXP, SEXP K_hatSEXP, SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP );
        Rcpp::traits::input_parameter< double >::type K_hat(K_hatSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        NumericVector __result = f_deviations(xs, K_hat, x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// do_pointwise_uncertainty
double do_pointwise_uncertainty(NumericVector ys, NumericVector deviations);
RcppExport SEXP MiniMiniMaxUQ_do_pointwise_uncertainty(SEXP ysSEXP, SEXP deviationsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type ys(ysSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type deviations(deviationsSEXP );
        double __result = do_pointwise_uncertainty(ys, deviations);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// pointwise_uncertainty
double pointwise_uncertainty(NumericMatrix xs, NumericVector ys, double K_hat, NumericVector x);
RcppExport SEXP MiniMiniMaxUQ_pointwise_uncertainty(SEXP xsSEXP, SEXP ysSEXP, SEXP K_hatSEXP, SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type ys(ysSEXP );
        Rcpp::traits::input_parameter< double >::type K_hat(K_hatSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        double __result = pointwise_uncertainty(xs, ys, K_hat, x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
